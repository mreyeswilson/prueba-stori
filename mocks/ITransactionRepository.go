// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import (
	events "github.com/aws/aws-lambda-go/events"

	mock "github.com/stretchr/testify/mock"

	models "github.com/mreyeswilson/prueba_stori/internal/domain/models"
)

// ITransactionRepository is an autogenerated mock type for the ITransactionRepository type
type ITransactionRepository struct {
	mock.Mock
}

// GetSummary provides a mock function with given fields: event
func (_m *ITransactionRepository) GetSummary(event events.S3EventRecord) (models.Summary, error) {
	ret := _m.Called(event)

	if len(ret) == 0 {
		panic("no return value specified for GetSummary")
	}

	var r0 models.Summary
	var r1 error
	if rf, ok := ret.Get(0).(func(events.S3EventRecord) (models.Summary, error)); ok {
		return rf(event)
	}
	if rf, ok := ret.Get(0).(func(events.S3EventRecord) models.Summary); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Get(0).(models.Summary)
	}

	if rf, ok := ret.Get(1).(func(events.S3EventRecord) error); ok {
		r1 = rf(event)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewITransactionRepository creates a new instance of ITransactionRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewITransactionRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *ITransactionRepository {
	mock := &ITransactionRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
