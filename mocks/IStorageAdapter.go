// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// IStorageAdapter is an autogenerated mock type for the IStorageAdapter type
type IStorageAdapter struct {
	mock.Mock
}

// GetObject provides a mock function with given fields: bucketName, key
func (_m *IStorageAdapter) GetObject(bucketName string, key string) (io.ReadCloser, error) {
	ret := _m.Called(bucketName, key)

	if len(ret) == 0 {
		panic("no return value specified for GetObject")
	}

	var r0 io.ReadCloser
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (io.ReadCloser, error)); ok {
		return rf(bucketName, key)
	}
	if rf, ok := ret.Get(0).(func(string, string) io.ReadCloser); ok {
		r0 = rf(bucketName, key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.ReadCloser)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(bucketName, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIStorageAdapter creates a new instance of IStorageAdapter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIStorageAdapter(t interface {
	mock.TestingT
	Cleanup(func())
}) *IStorageAdapter {
	mock := &IStorageAdapter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
