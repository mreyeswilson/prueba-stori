// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ISenderService is an autogenerated mock type for the ISenderService type
type ISenderService struct {
	mock.Mock
}

// SendEmail provides a mock function with given fields: from, subject, data
func (_m *ISenderService) SendEmail(from string, subject string, data *map[string]interface{}) error {
	ret := _m.Called(from, subject, data)

	if len(ret) == 0 {
		panic("no return value specified for SendEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, *map[string]interface{}) error); ok {
		r0 = rf(from, subject, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewISenderService creates a new instance of ISenderService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewISenderService(t interface {
	mock.TestingT
	Cleanup(func())
}) *ISenderService {
	mock := &ISenderService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
